AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ProjectSource:
    Type: String
    Default: "<GITHUB URL TO YOUR REPO>"
    Description: "Source control URL (e.g. Github)"
  GithubOwner:
    Type: String
    Default: <YOUR GITHUB LOGIN ID>
  GithubRepo:
    Type: String
    Default: <GITHUB REPO NAME>
  GithubOAuthToken:
    Type: String
    Default: "<YOUR GITHUB OAUTH ACCESS TOKEN>"
    Description: "Github personal access token"

Resources:
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipeLineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
      -
        Name: Source
        Actions:
        -
          Name: SourceAction
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          OutputArtifacts:
          -
            Name: <UNIQUE NAME FOR YOUR APP ON AWS (i.e. MyApp)>
          Configuration:
            Owner: !Ref GithubOwner
            Repo: !Ref GithubRepo
            Branch: master
            OAuthToken: !Ref GithubOAuthToken
      -
        Name: Build
        Actions:
        -
          Name: BuildAction
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          InputArtifacts:
          -
            Name: <UNIQUE NAME FOR YOUR APP ON AWS (same as from line 39)>
          OutputArtifacts:
          -
            Name: <UNIQUE NAME FOR YOUR APP BUILD ON AWS (i.e. MyAppBuild)>
          Configuration:
            ProjectName: !Ref CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: Allow
          Principal:
            Service:
            - "codebuild.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /service-role/
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: Allow
            Action:
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:GetBucketVersioning"
            - "s3:PutObject"
            Resource:
            - !GetAtt PipelineBucket.Arn
            - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
          -
            Effect: Allow
            Action:
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:GetBucketVersioning"
            - "s3:PutObject"
            - "s3:PutObjectAcl"
            Resource:
            - !GetAtt <UNIQUE BUCKET NAME>.Arn
            - !Join ['', [!GetAtt <UNIQUE BUCKET NAME>.Arn, "/*"]]
          -
            Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            - "cloudfront:CreateInvalidation"
            Resource:
            - "*"
  CodePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: Allow
          Principal:
            Service:
            - "codepipeline.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: Allow
            Action:
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:GetBucketVersioning"
            - "s3:PutObject"
            Resource:
            - !GetAtt PipelineBucket.Arn
            - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
          -
            Effect: Allow
            Action:
            - "codebuild:BatchGetBuilds"
            - "codebuild:StartBuild"
            Resource: "*"
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${AWS::StackName}-CodeBuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
        Name: <UNIQE NAME FOR THIS AWS PROJECT>
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/nodejs:8.11.0"
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.1
          phases:
            pre_build:
              commands:
                - echo Installing source NPM dependencies...
                - npm install
            build:
              commands:
                - echo Build started on `date`
                - npm run build
            post_build:
              commands:
                - aws s3 cp --recursive --acl public-read ./build s3://${<UNIQUE BUCKET NAME>}/
                - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/service-worker.js s3://${<UNIQUE BUCKET NAME>}/
                - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://${<UNIQUE BUCKET NAME>}/
                - aws cloudfront create-invalidation --distribution-id ${Distribution} --paths /index.html /service-worker.js
          artifacts:
            files:
              - '**/*'
            base-directory: build
  PipelineBucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}
  <UNIQUE BUCKET NAME>:
    Type: 'AWS::S3::Bucket'
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
  Distribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
        -
          DomainName: !GetAtt <UNIQUE BUCKET NAME>.DomainName
          Id: !Ref <UNIQUE BUCKET NAME>
          S3OriginConfig:
            OriginAccessIdentity: ''
        DefaultRootObject: index.html
        Enabled: true
        DefaultCacheBehavior:
          MinTTL: 86400
          MaxTTL: 31536000
          ForwardedValues:
            QueryString: true
          TargetOriginId: !Ref <UNIQUE BUCKET NAME>
          ViewerProtocolPolicy: "redirect-to-https"
